# psql
#  CREATE USER zope WITH PASSWORD 'secret';
#  CREATE DATABASE amkumma OWNER zope;
# - or -
# $ createuser zope
# $ createdb --owner=zope amkumma

[buildout]
parts +=
    relstorage-import
    relstorage-export
    relstorage-pack

[instance]
rel-storage = ${relstorage:rel-storage}
eggs +=
    ${relstorage:eggs}


[db]
name = aafdev
host = 127.0.0.1
blob-dir = ${buildout:directory}/var/blobstorage
user = zope
password = secret
memcached = 127.0.0.1:11211


[relstorage]
eggs =
    RelStorage
    psycopg2
    python-memcached

# See: https://pypi.python.org/pypi/RelStorage for all options
dsn = dbname='${db:name}' host='${db:host}' user='${db:user}' password='${db:password}'
rel-storage =
    type postgresql
    dsn ${:dsn}
    keep-history false
    shared-blob-dir true
    blob-dir ${db:blob-dir}
    blob-cache-size 512mb
    cache-local-mb 1
    cache-prefix ${db:name}
    cache-module-name memcache
    cache-servers ${db:memcached}


[relstorage-import]
recipe = collective.recipe.template
input  = ${buildout:directory}/cfg/templates/relstorage-import.cfg.in
output = ${buildout:directory}/relstorage-import.cfg

blobstorage = ${db:blob-dir}
dbname = ${db:name}
dbhost = ${db:host}
dbuser = ${db:user}
dbpassword = ${db:password}
blobstorage-import = /migration/aaf-blobstorage-import
filestorage-import = /migration/aaf-filestorage-import.fs


[relstorage-export]
recipe = collective.recipe.template
input  = ${buildout:directory}/cfg/templates/relstorage-export.cfg.in
output = ${buildout:directory}/relstorage-export.cfg

blobstorage = ${db:blob-dir}
dbname = ${db:name}
dbhost = ${db:host}
dbuser = ${db:user}
dbpassword = ${db:password}
blobstorage-export = /migration/aaf-blobstorage-export
filestorage-export = /migration/aaf-filestorage-export.fs

[relstorage-pack]
recipe = collective.recipe.template
input  = ${buildout:directory}/cfg/templates/relstorage-pack.cfg.in
output = ${buildout:directory}/relstorage-pack.cfg

blobstorage = ${db:blob-dir}
dbname = ${db:name}
dbhost = ${db:host}
dbuser = ${db:user}
dbpassword = ${db:password}
